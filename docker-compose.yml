version: '3.8'

services:
  api:
    container_name: nok.api
    build:
      context: .
      dockerfile: dockerfiles/dotnet.dockerfile
    image: dotnet
    ports:
      - 5000:80
    depends_on:
      - db
      - redis
      - elasticsearch

  db:
    image: postgres:15
    container_name: nok.db
    environment:
      POSTGRES_DB: nok
      POSTGRES_PASSWORD: nok
      POSTGRES_USER: nok
    ports:
      - 5432:5432
    networks:
      - db.pgweb
    restart: on-failure:3

  db.pgweb:
    image: sosedoff/pgweb
    container_name: nok.db.pgweb
    depends_on:
      - db
    environment:
      PGWEB_DATABASE_URL: postgres://nok:nok@db:5432/nok?sslmode=disable
    ports:
      - 8085:8081
    networks:
      - db.pgweb
    restart: on-failure:3

  redis:
    image: redis:latest
    container_name: nok.redis
    command: redis-server
    volumes:
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    networks:
      - redis-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nok.redis.commander
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=qwerty
    ports:
      - 8081:8081
    networks:
      - redis-network
    depends_on:
      - redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet

volumes:
  redis:
  redis-config:
  esdata:

networks:
  redis-network:
    driver: bridge
  db.pgweb:
  esnet:
